openapi: 3.0.1
info:
  title: The SpatioTemporal Asset Catalog API
  version: 0.9.0
  description: >-
    This is an OpenAPI definition of the core SpatioTemporal Asset Catalog API
    specification. Any service that implements this endpoint to allow search of
    spatiotemporal assets can be considered a STAC API. The endpoint is also
    available as an OpenAPI fragment that can be integrated with other OpenAPI
    definitions, and is designed to slot seamlessly into a OGC API - Features definition.
  contact:
    name: STAC Specification
    url: 'http://stacspec.org'
  license:
    name: Apache License 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
servers:
  - url: 'http://dev.cool-sat.com'
    description: Development server
  - url: 'http://www.cool-sat.com'
    description: Production server
paths:
  '/':
    get:
      # Overriding the OAFeat description for this endpoint
      description: |-
        Returns the root STAC Catalog or STAC Collection that is the entry point
        for users to browse with STAC Browser or for search engines to crawl.
        This can either return a single STAC Collection or more commonly a STAC
        catalog.

        The landing page provides links to the API definition, the conformance
        statements, the collections and sub-catalogs.
  /search:
    get:
      summary: Search STAC items with simple filtering.
      description: |-
        Retrieve Items matching filters. Intended as a shorthand API for simple
        queries.
        
        This method is optional, but you MUST implement `POST /search` if you
        want to implement this method.

        If this endpoint is implemented on a server, it is required to add a
        link referring to this endpoint with `rel` set to `search` to the
        `links` array in `GET /`. As `GET` is the default method, the `method`
        may not be set explicitly in the link.
      operationId: getSearchSTAC
      tags:
        - STAC
      parameters:
        - $ref: '#/components/parameters/bbox'
        - $ref: '#/components/parameters/datetime'
        # The following parameter is defined in OAFeat.yaml
        - $ref: '#/components/parameters/limit'
        - $ref: '#/components/parameters/ids'
        - $ref: '#/components/parameters/collectionsArray'
      responses:
        '200':
          description: A feature collection.
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/itemCollection'
            text/html:
              schema:
                type: string
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                # The following schema is defined in OAFeat.yaml
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
    post:
      summary: Search STAC items with full-featured filtering.
      description: |-
        retrieve items matching filters. Intended as the standard, full-featured
        query API.
        
        This method is mandatory to implement if `GET /search` is implemented.
        If this endpoint is implemented on a server, it is required to add a
        link referring to this endpoint with `rel` set to `search` and `method`
        set to `POST` to the `links` array in `GET /`.
      operationId: postSearchSTAC
      tags:
        - STAC
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/searchBody'
      responses:
        '200':
          description: A feature collection.
          content:
            application/geo+json:
              schema:
                $ref: '#/components/schemas/itemCollection'
            text/html:
              schema:
                type: string
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                # The following schema is defined in OAFeat.yaml
                $ref: '#/components/schemas/exception'
            text/html:
              schema:
                type: string
components:
  parameters:
    ids:
      name: ids
      in: query
      description: |-
        Array of Item ids to return. All other filter parameters that further
        restrict the number of search results are ignored
      required: false
      schema:
        $ref: '#/components/schemas/ids'
      explode: false
    collectionsArray:
      name: collections
      in: query
      description: |
        Array of Collection IDs to include in the search for items.
        Only Items in one of the provided Collections will be searched
      required: false
      schema:
        $ref: '#/components/schemas/collectionsArray'
      explode: false
    # This schema extends OAFeat.yaml#/parameters/bbox.
    bbox:
      description: |-
        Only features that have a geometry that intersects the bounding box are selected.
        The bounding box is provided as four or six numbers, depending on
        whether the coordinate reference system includes a vertical axis (height
        or depth):

        * Lower left corner, coordinate axis 1
        * Lower left corner, coordinate axis 2
        * Minimum value, coordinate axis 3 (optional)
        * Upper right corner, coordinate axis 1
        * Upper right corner, coordinate axis 2
        * Maximum value, coordinate axis 3 (optional)

        The coordinate reference system of the values is WGS 84
        longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless
        a different coordinate reference system is specified in the parameter
        `bbox-crs`.

        For WGS 84 longitude/latitude the values are in most cases the sequence
        of minimum longitude, minimum latitude, maximum longitude and maximum
        latitude. However, in cases where the box spans the antimeridian the
        first value (west-most box edge) is larger than the third value
        (east-most box edge).

        If the vertical axis is included, the third and the sixth number are
        the bottom and the top of the 3-dimensional bounding box.

        If a feature has multiple spatial geometry properties, it is the
        decision of the server whether only a single spatial geometry property
        is used to determine the extent or all relevant geometries.

        Example: The bounding box of the New Zealand Exclusive Economic Zone in
        WGS 84 (from 160.6째E to 170째W and from 55.95째S to 25.89째S) would be
        represented in JSON as `[160.6, -55.95, -170, -25.89]` and in a query as
        `bbox=160.6,-55.95,-170,-25.89`.
  responses:
    # This schema extends OAFeat.yaml#/components/responses/LandingPage.
    LandingPage:
      description: |-
        The landing page provides links to the API definition
        (link relations `service-desc` and `service-doc`),
        the Conformance declaration (path `/conformance`,
        link relation `conformance`), and the Feature
        Collections (path `/collections`, link relation
        `data`).

        Links to the search endpoints (path `/search`, link relation `search`,
        method `GET` or `POST`) are **required** to be specified if the API
        implements `/search` for any of the specified HTTP methods.
      content:
        application/json:
          example:
            stac_version: 0.9.0
            id: naip
            title: NAIP Imagery
            description: Catalog of NAIP Imagery.
            links:
              - href: 'http://data.example.org/search'
                rel: search
                type: application/json
                title: Search across feature collections
    # This schema extends OAFeat.yaml#/components/responses/Feature change the schema from featureGeoJson to item.
    Feature:
      content:
        application/geo+json:
          schema:
            $ref: '#/components/schemas/item'
  schemas:
    description:
      type: string
      description: |-
        Detailed multi-line description to fully explain the catalog or
        collection.

        [CommonMark 0.29](http://commonmark.org/) syntax MAY be used for rich
        text representation.
    # This schema extends OAFeat.yaml#/components/schemas/collection to add and require additional fields and add an example.
    collection:
      type: object
      required:
        - stac_version
        - description
        - license
        - extent
      properties:
        stac_version:
          $ref: '#/components/schemas/stac_version'
        stac_extensions:
          $ref: '#/components/schemas/stac_extensions'
        description:
          $ref: '#/components/schemas/description'
        keywords:
          type: array
          description: List of keywords describing the collection.
          items:
            type: string
        license:
          $ref: '#/components/schemas/license'
        providers:
          $ref: '#/components/schemas/providers'
        summaries:
          description: |-
            Summaries are either a unique set of all available values *or*
            statistics. Statistics by default only specify the range (minimum
            and maximum values), but can optionally be accompanied by additional
            statistical values. The range can specify the potential range of
            values, but it is recommended to be as precise as possible. The set
            of values must contain at least one element and it is strongly
            recommended to list all values. It is recommended to list as many
            properties as reasonable so that consumers get a full overview of
            the Collection. Properties that are covered by the Collection
            specification (e.g. `providers` and `license`) may not be repeated
            in the summaries.
          type: object
          additionalProperties:
            oneOf:
              - type: array
                title: Set of values
                items:
                  description: A value of any type.
              - type: object
                title: Statistics
                description: |-
                  By default, only ranges with a minimum and a maximum value can
                  be specified. Ranges can be specified for ordinal values only,
                  which means they need to have a rank order. Therefore, ranges
                  can only be specified for numbers and some special types of
                  strings. Examples: grades (A to F), dates or times.
                  Implementors are free to add other derived statistical values
                  to the object, for example `mean` or `stddev`.
                required:
                  - min
                  - max
                properties:
                  min:
                    anyOf:
                      - type: string
                      - type: number
                  max:
                    anyOf:
                      - type: string
                      - type: number
      example:
        stac_version: 0.9.0
        stac_extensions: []
        id: Sentinel-2
        title: 'Sentinel-2 MSI: MultiSpectral Instrument, Level-1C'
        description: |
          Sentinel-2 is a wide-swath, high-resolution, multi-spectral
          imaging mission...
        license: proprietary
        keywords:
          - copernicus
          - esa
          - eu
          - msi
          - radiance
          - sentinel
        providers:
          - name: ESA
            roles:
              - producer
              - licensor
            url: 'https://sentinel.esa.int/web/sentinel/user-guides/sentinel-2-msi'
        extent:
          spatial:
            bbox:
              - - -180
                - -56
                - 180
                - 83
          temporal:
            interval:
              - - '2015-06-23T00:00:00Z'
                - '2019-07-10T13:44:56Z'
        summaries:
          datetime:
            min: '2015-06-23T00:00:00Z'
            max: '2019-07-10T13:44:56Z'
          'sci:citation':
            - 'Copernicus Sentinel data [Year]'
          'eo:gsd':
            - 10
            - 30
            - 60
          'platform':
            - sentinel-2a
            - sentinel-2b
          'constellation':
            - sentinel-2
          'instruments':
            - msi
          'view:off_nadir':
            min: 0
            max: 100
          'view:sun_elevation':
            min: 6.78
            max: 89.9
          'eo:bands':
            - - name: B1
                common_name: coastal
                center_wavelength: 4.439
              - name: B2
                common_name: blue
                center_wavelength: 4.966
              - name: B3
                common_name: green
                center_wavelength: 5.6
              - name: B4
                common_name: red
                center_wavelength: 6.645
              - name: B5
                center_wavelength: 7.039
              - name: B6
                center_wavelength: 7.402
              - name: B7
                center_wavelength: 7.825
              - name: B8
                common_name: nir
                center_wavelength: 8.351
              - name: B8A
                center_wavelength: 8.648
              - name: B9
                center_wavelength: 9.45
              - name: B10
                center_wavelength: 1.3735
              - name: B11
                common_name: swir16
                center_wavelength: 1.6137
              - name: B12
                common_name: swir22
                center_wavelength: 2.2024
        links:
          - rel: self
            href: 'http://cool-sat.com/collections/Sentinel-2'
          - rel: root
            href: 'http://cool-sat.com/collections'
          - rel: license
            href: 'https://scihub.copernicus.eu/twiki/pub/SciHubWebPortal/TermsConditions/Sentinel_Data_Terms_and_Conditions.pdf'
            title: Legal notice on the use of Copernicus Sentinel Data and Service Information
    # This schema extends OAFeat.yaml#/components/schemas/featureCollectionGeoJSON to change the items schema from featureGeoJson to item
    featureCollectionGeoJSON:
      properties:
        features:
          items:
            $ref: "#/components/schemas/item"
    # This schema extends OAFeat.yaml#/components/schemas/extent to require the properties
    extent:
      required:
        - spatial
        - temporal
      properties:
        # These two required flags may be added later to the OAFeat spec directly:
        # https://github.com/opengeospatial/ogcapi-features/issues/278#issuecomment-546893367
        spatial:
          required:
            - bbox
        temporal:
          required:
            - interval
    # This schema extends OAFeat.yaml#/components/schemas/link to require rel and change the example
    link:
      title: Link
      required:
        - rel
      properties:
        title:
          example: NAIP Child Catalog
        href:
          format: url
          example: 'http://www.geoserver.example/stac/naip/child/catalog.json'
        rel:
          example: child
        method:
          type: string
          enum:
            - GET
            - POST
          default: GET
          description: Specifies the HTTP method that the link expects
        headers:
          type: object
          description: Object key values pairs they map to headers
          example:
            Accept: application/json
        body:
          type: object
          description: For POST requests, the link can specify the HTTP body as a JSON object.
        merge:
          type: boolean
          default: false
          description: |-
            This is only valid when the server is responding to POST request.

            If merge is true, the client is expected to merge the body value
            into the current request body before following the link.
            This avoids passing large post bodies back and forth when following
            links, particularly for navigating pages through the `POST /search`
            endpoint.

            NOTE: To support form encoding it is expected that a client be able
            to merge in the key value pairs specified as JSON
            `{"next": "token"}` will become `&next=token`.
    license:
      type: string
      description: |-
        License(s) of the data as a SPDX
        [License identifier](https://spdx.org/licenses/). Alternatively, use
        `proprietary` if the license is not on the SPDX license list or
        `various` if multiple licenses apply. In these two cases links to the
        license texts SHOULD be added, see the `license` link relation type.
        
        Non-SPDX licenses SHOULD add a link to the license text with the
        `license` relation in the links section. The license text MUST NOT be
        provided as a value of this field. If there is no public license URL
        available, it is RECOMMENDED to host the license text and
        link to it.
      example: Apache-2.0
    providers:
      type: array
      description: >-
        A list of providers, which may include all organizations capturing or
        processing the data or the hosting provider. Providers should be listed
        in chronological order with the most recent provider being the last
        element of the list.
      items:
        type: object
        title: Provider
        required:
          - name
        properties:
          name:
            description: The name of the organization or the individual.
            type: string
          description:
            description: >-
              Multi-line description to add further provider information such as
              processing details for processors and producers, hosting details
              for hosts or basic contact information.


              CommonMark 0.29 syntax MAY be used for rich text representation.
            type: string
          roles:
            description: |-
              Roles of the provider.

              The provider's role(s) can be one or more of the following
              elements:

              * licensor: The organization that is licensing the dataset under
                the license specified in the collection's license field.
              * producer: The producer of the data is the provider that
                initially captured and processed the source data, e.g. ESA for
                Sentinel-2 data.
              * processor: A processor is any provider who processed data to a
                derived product.
              * host: The host is the actual provider offering the data on their
                storage. There should be no more than one host, specified as last
                element of the list.
            type: array
            items:
              type: string
              enum:
                - producer
                - licensor
                - processor
                - host
          url:
            description: >-
              Homepage on which the provider describes the dataset and publishes
              contact information.
            type: string
            format: url
    searchBody:
      description: The search criteria
      type: object
      allOf:
        - $ref: '#/components/schemas/bboxFilter'
        - $ref: '#/components/schemas/datetimeFilter'
        - $ref: '#/components/schemas/intersectsFilter'
        - $ref: '#/components/schemas/collectionsFilter'
        - $ref: '#/components/schemas/idsFilter'
        - $ref: '#/components/schemas/limitFilter'
    # This schema bases on OAFeat.yaml#/components/parameters/limit/schema
    limit:
      type: integer
      minimum: 1
      example: 10
      default: 10
      maximum: 10000
      description: The maximum number of results to return (page size). Defaults to 10
    # This schema bases on:
    # - OAFeat.yaml#/components/schemas/extent/properties/spatial/properties/bbox
    # - OAFeat.yaml#/components/parameters/bbox
    bbox:
      description: |-
        Only features that have a geometry that intersects the bounding box are
        selected. The bounding box is provided as four or six numbers,
        depending on whether the coordinate reference system includes a
        vertical axis (elevation or depth):

        * Lower left corner, coordinate axis 1
        * Lower left corner, coordinate axis 2  
        * Lower left corner, coordinate axis 3 (optional) 
        * Upper right corner, coordinate axis 1 
        * Upper right corner, coordinate axis 2 
        * Upper right corner, coordinate axis 3 (optional)

        The coordinate reference system of the values is WGS84
        longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless
        a different coordinate reference system is specified in the parameter
        `bbox-crs`.

        For WGS84 longitude/latitude the values are in most cases the sequence
        of minimum longitude, minimum latitude, maximum longitude and maximum
        latitude. However, in cases where the box spans the antimeridian the
        first value (west-most box edge) is larger than the third value
        (east-most box edge).

        If a feature has multiple spatial geometry properties, it is the
        decision of the server whether only a single spatial geometry property
        is used to determine the extent or all relevant geometries.

        Example: The bounding box of the New Zealand Exclusive Economic Zone in
        WGS 84 (from 160.6째E to 170째W and from 55.95째S to 25.89째S) would be
        represented in JSON as `[160.6, -55.95, -170, -25.89]` and in a query as
        `bbox=160.6,-55.95,-170,-25.89`.
      type: array
      minItems: 4
      maxItems: 6
      items:
        type: number
      example:
        - -110
        - 39.5
        - -105
        - 40.5
    bboxFilter:
      type: object
      description: Only return items that intersect the provided bounding box.
      properties:
        bbox:
          $ref: '#/components/schemas/bbox'
    collectionsArray:
      type: array
      description: |-
        Array of Collection IDs to include in the search for items.
        Only Items in one of the provided Collections will be searched.
      items:
        type: string
    ids:
      type: array
      description: |-
        Array of Item ids to return. All other filter parameters that further
        restrict the number of search results are ignored
      items:
        type: string
    datetimeFilter:
      description: An object representing a date+time based filter.
      type: object
      properties:
        datetime:
          $ref: '#/components/schemas/datetime'
    intersectsFilter:
      type: object
      description: Only returns items that intersect with the provided polygon.
      properties:
        intersects:
          $ref: 'https://geojson.org/schema/Geometry.json'
    limitFilter:
      type: object
      description: Only returns maximum number of results (page size)
      properties:
        limit:
          $ref: '#/components/schemas/limit'
    idsFilter:
      type: object
      description: Only returns items that match the array of given ids
      properties:
        ids:
          $ref: '#/components/schemas/ids'
    collectionsFilter:
      type: object
      description: Only returns the collections specified
      properties:
        collections:
          $ref: '#/components/schemas/collectionsArray'
    # - OAFeat.yaml#/components/parameters/datetime 
    datetime:
      type: string
      description: |-
        Either a date-time or an interval, open or closed. Date and time
        expressions adhere to RFC 3339. Open intervals are expressed using
        double-dots.

        Examples:

        * A date-time: "2018-02-12T23:20:50Z"
        * A closed interval: "2018-02-12T00:00:00Z/2018-03-18T12:31:12Z"
        * Open intervals: "2018-02-12T00:00:00Z/.." or "../2018-03-18T12:31:12Z"

        Only features that have a temporal property that intersects the value of
        `datetime` are selected.

        If a feature has multiple temporal properties, it is the decision of the
        server whether only a single temporal property is used to determine
        the extent or all relevant temporal properties.
      example: '2018-02-12T00:00:00Z/2018-03-18T12:31:12Z'
    stac_version:
      title: STAC version
      type: string
      example: 0.9.0
    stac_extensions:
      title: STAC extensions
      type: array
      uniqueItems: true
      items:
        anyOf:
          - title: Reference to a JSON Schema
            type: string
            format: uri
          - title: Reference to a core extension
            type: string
    # This schema extends OAFeat.yaml#/components/schemas/landingPage to add and require additional fields.
    landingPage:
      type: object
      required:
        - stac_version
        - id
        - description
      properties:
        stac_version:
          $ref: '#/components/schemas/stac_version'
        stac_extensions:
          $ref: '#/components/schemas/stac_extensions'
        id:
          type: string
    itemCollection:
      description: A GeoJSON FeatureCollection augmented with foreign members that contain values relevant to a STAC entity
      type: object
      required:
        - features
        - type
      properties:
        type:
          type: string
          enum:
            - FeatureCollection
        features:
          type: array
          items:
            $ref: '#/components/schemas/item'
        links:
          $ref: '#/components/schemas/itemCollectionLinks'
    item:
      description:  A GeoJSON Feature augmented with foreign members that contain values relevant to a STAC entity
      type: object
      required:
        - stac_version
        - id
        - type
        - geometry
        - bbox
        - links
        - properties
        - assets
      properties:
        stac_version:
          $ref: '#/components/schemas/stac_version'
        stac_extensions:
          $ref: '#/components/schemas/stac_extensions'
        id:
          $ref: '#/components/schemas/itemId'
        bbox:
          $ref: '#/components/schemas/bbox'
        geometry:
          $ref: 'https://geojson.org/schema/Geometry.json'
        type:
          $ref: '#/components/schemas/itemType'
        properties:
          $ref: '#/components/schemas/itemProperties'
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
        assets:
          $ref: '#/components/schemas/itemAssets'
      example:
        stac_version: 0.9.0
        stac_extensions:
          - eo
          - view
          - 'https://example.com/cs-extension/1.0/schema.json'
        type: Feature
        id: CS3-20160503_132131_05
        bbox:
          - -122.59750209
          - 37.48803556
          - -122.2880486
          - 37.613537207
        geometry:
          type: Polygon
          coordinates:
            - - - -122.308150179
                - 37.488035566
              - - -122.597502109
                - 37.538869539
              - - -122.576687533
                - 37.613537207
              - - -122.2880486
                - 37.562818007
              - - -122.308150179
                - 37.488035566
        properties:
          datetime: '2016-05-03T13:22:30.040Z'
          title: A CS3 item
          license: PDDL-1.0
          providers:
            - name: CoolSat
              roles:
                - producer
                - licensor
              url: 'https://cool-sat.com/'
          'view:sun_azimuth': 168.7
          'eo:cloud_cover': 0.12
          'view:off_nadir': 1.4
          'platform': coolsat2
          'instruments':
            - cool_sensor_v1
          'eo:bands': []
          'view:sun_elevation': 33.4
          'eo:gsd': 0.512
        collection: CS3
        links:
          - rel: self
            href: 'http://cool-sat.com/collections/CS3/items/20160503_132130_04'
          - rel: root
            href: 'http://cool-sat.com/collections'
          - rel: parent
            href: 'http://cool-sat.com/collections/CS3'
          - rel: collection
            href: 'http://cool-sat.com/collections/CS3'
        assets:
          analytic:
            href: 'http://cool-sat.com/static-catalog/CS3/20160503_132130_04/analytic.tif'
            title: 4-Band Analytic
          thumbnail:
            href: 'http://cool-sat.com/static-catalog/CS3/20160503_132130_04/thumbnail.png'
            title: Thumbnail
    itemId:
      type: string
      example: path/to/example.tif
      description: 'Provider identifier, a unique ID, potentially a link to a file.'
    itemType:
      type: string
      description: The GeoJSON type
      enum:
        - Feature
    itemAssets:
      type: object
      additionalProperties:
        type: object
        required:
          - href
        properties:
          href:
            type: string
            format: url
            description: Link to the asset object
            example: >-
              http://cool-sat.com/catalog/collections/cs/items/CS3-20160503_132130_04/thumb.png
          title:
            type: string
            description: Displayed title
            example: Thumbnail
          description:
            type: string
            description: |-
              Multi-line description to explain the asset.

              [CommonMark 0.29](http://commonmark.org/) syntax MAY be used for
              rich text representation.
            example: Small 256x256px PNG thumbnail for a preview.
          type:
            type: string
            description: Media type of the asset
            example: image/png
          roles:
            type: array
            items:
              type: string
            description: Purposes of the asset
            example:
              - thumbnail
    itemProperties:
      type: object
      required:
        - datetime
      description: provides the core metatdata fields plus extensions
      properties:
        datetime:
          $ref: '#/components/schemas/datetime'
      additionalProperties:
        description: Any additional properties added in via Item specification or extensions.
    itemCollectionLinks:
      type: array
      description: >-
        An array of links. Can be used for pagination, e.g. by providing a link
        with the `next` relation type.
      items:
        $ref: '#/components/schemas/link'
      example:
        - rel: next
          href: >-
            http://api.cool-sat.com/search?next=ANsXtp9mrqN0yrKWhf-y2PUpHRLQb1GT-mtxNcXou8TwkXhi1Jbk
tags:
  - name: STAC
    description: Extension to OGC API - Features to support STAC metadata model and search API
