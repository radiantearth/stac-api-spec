openapi: 3.0.3
info:
  title: STAC API - Browseable
  version: '1.0.0-beta.5'
  description: >-
    This is an OpenAPI definition of the SpatioTemporal Asset Catalog API - Browseable
    specification.
  contact:
    name: STAC Specification
    url: 'http://stacspec.org'
  license:
    name: Apache License 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
tags:
  - name: Browseable
    description: |-
      All endpoints related to STAC API - Browseable
paths:
  '/':
    get:
      tags:
        - Features
      summary: landing page
      description: |-
        The landing page provides links to the sub-resources.
      operationId: getLandingPage
      responses:
        '200':
          description: |-
            The landing page provides links to the API definition
            (link relations `service-desc` and `service-doc`),
            the Conformance declaration (path `/conformance`,
            link relation `conformance`), and the Feature
            Collections (path `/collections`, link relation
            `data`).
          content:
            application/json:
              schema:
                $ref: '../core/openapi.yaml#/components/schemas/landingPage'
              example:
                stac_version: 1.0.0-beta.5
                type: Catalog
                id: sentinel
                title: Copernicus Sentinel Imagery
                description: Catalog of Copernicus Sentinel 1 and 2 imagery.
                conformsTo:
                  - 'https://api.stacspec.org/v1.0.0-beta.5/core'
                  - 'https://api.stacspec.org/v1.0.0-beta.5/browseable'
                  - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/core'
                  - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30'
                  - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson'
                links:
                  - href: 'http://data.example.org/'
                    rel: self
                    type: application/json
                    title: this document
                  - href: 'http://data.example.org/api'
                    rel: service-desc
                    type: application/vnd.oai.openapi+json;version=3.0
                    title: the API definition
                  - href: 'http://data.example.org/api.html'
                    rel: service-doc
                    type: text/html
                    title: the API documentation
                  - href: 'http://data.example.org/conformance'
                    rel: conformance
                    type: application/json
                    title: OGC API conformance classes implemented by this server
                  - href: 'http://data.example.org/catalogs/sentinel-1'
                    rel: child
                    type: application/json
                    title: Sentinel 1 Catalog
                  - href: 'http://data.example.org/catalogs/sentinel-2'
                    rel: child
                    type: application/json
                    title: Sentinel 2 Catalog
                  - href: 'http://data.example.org/collections/collection-1'
                    rel: child
                    type: application/json
                    title: Collection 1 Collection
                  - href: 'http://data.example.org/collections/collection-2'
                    rel: child
                    type: application/json
                    title: Collection 2 Collection
  '/conformance':
    get:
      tags:
        - Features
      summary: information about specifications that this API conforms to
      description: |-
        A list of all conformance classes specified in a standard that the
        server conforms to.
      operationId: getConformanceDeclaration
      responses:
        '200':
          $ref: '#/components/responses/ConformanceDeclaration'
        '500':
          $ref: '#/components/responses/ServerError'
components:
  responses:
    ConformanceDeclaration:
      description: |-
        The URIs of all conformance classes supported by the server.

        To support "generic" clients that want to access multiple
        OGC API Features implementations - and not "just" a specific
        API / server, the server declares the conformance
        classes it implements and conforms to.
      content:
        application/json:
          schema:
            $ref: '../core/commons.yaml#/components/schemas/conformanceClasses'
          example:
            conformsTo:
              - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/core'
              - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/oas30'
              - 'http://www.opengis.net/spec/ogcapi-features-1/1.0/conf/geojson'
