openapi: 3.0.1
info:
  title: The SpatioTemporal Asset Catalog API - Transaction
  version: 1.0.0-beta.2
  description: >-
    This is an OpenAPI definition of the SpatioTemporal Asset Catalog API
    Transaction specification.
  contact:
    name: STAC Specification
    url: 'http://stacspec.org'
  license:
    name: Apache License 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0'
tags:
  - name: Transaction
    description: >-
      STAC-specific operations to add, remove, and edit items within OGC API -
      Features collections.
paths:
  '/collections/{collectionId}/items':
    parameters:
      - $ref: '#/components/parameters/collectionId'
    post:
      summary: add a new STAC Item to a collection
      description: create a new STAC Item in a specific collection
      operationId: postFeature
      tags:
        - Transaction
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - $ref: '#/components/schemas/item'
                - $ref: '#/components/schemas/itemCollection'
      responses:
        '201':
          description: Status of the create request.
          headers:
            Location:
              description: >-
                The URL of the newly added resource (i.e. path of the resource
                end point)
              schema:
                type: string
                format: url
            ETag:
              schema:
                type: string
              description: A string to ensure the item has not been modified
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/item'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
  '/collections/{collectionId}/items/{featureId}':
    parameters:
      - $ref: '#/components/parameters/collectionId'
      - $ref: '#/components/parameters/featureId'
    get:
      tags:
        - Transaction
      description: |-
        Fetch the feature with id `featureId` in the feature collection
        with id `collectionId`.
      operationId: getFeature
      responses:
        '200':
          description: Adds a ETag header to the response specified in STAC API - Features
          headers:
            ETag:
              schema:
                type: string
              description: A string to ensure the item has not been modified
    put:
      summary: update an existing feature by Id with a complete item definition
      description: >-
        Use this method to update an existing feature. Requires the entire
        GeoJSON  description be submitted.
      operationId: updateFeature
      tags:
        - Transaction
      parameters:
        - $ref: '#/components/parameters/IfMatch'
      requestBody:
        description: >-
          The request body shall contain a representation of the replacement
          item.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/item'
      responses:
        '204':
          description: The item was replaced
          headers:
            ETag:
              schema:
                type: string
              description: An updated string to track changes
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '412':
          $ref: '#/components/responses/PreconditionFailed'
        '500':
          $ref: '#/components/responses/ServerError'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
    patch:
      summary: update an existing feature by Id with a partial item definition
      description: >-
        Use this method to update an existing feature. Requires a GeoJSON
        fragment (containing the fields to be updated) be submitted.
      operationId: patchFeature
      tags:
        - Transaction
      parameters:
        - $ref: '#/components/parameters/IfMatchOptional'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/partialItem'
      responses:
        '204':
          description: Status of the update request.
          headers:
            ETag:
              schema:
                type: string
              description: A string to ensure the item has not been modified
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
    delete:
      summary: delete an existing feature by Id
      description: Use this method to delete an existing feature.
      operationId: deleteFeature
      tags:
        - Transaction
      parameters:
        - $ref: '#/components/parameters/IfMatch'
      responses:
        '204':
          description: The resource was deleted.
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'
        default:
          description: An error occurred.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/exception'
components:
  parameters:
    IfMatch:
      name: If-Match
      in: header
      description: Only take the action if the ETag of the item still matches
      required: true
      schema:
        type: string
    IfMatchOptional:
      name: If-Match
      in: header
      description: Only take the action if the ETag of the item still matches
      required: false
      schema:
        type: string
    collectionId:
      name: collectionId
      in: path
      description: local identifier of a collection
      required: true
      schema:
        type: string
    featureId:
      name: featureId
      in: path
      description: local identifier of a feature
      required: true
      schema:
        type: string
  schemas:
    partialItem:
      type: object
      properties:
        stac_version:
          $ref: '#/components/schemas/stac_version'
        stac_extensions:
          $ref: '#/components/schemas/stac_extensions'
        id:
          $ref: '#/components/schemas/itemId'
        bbox:
          $ref: '#/components/schemas/bbox'
        geometry:
          $ref: '#/components/schemas/geometryGeoJSON'
        type:
          $ref: '#/components/schemas/itemType'
        properties:
          $ref: '#/components/schemas/partialItemProperties'
        links:
          type: array
          items:
            $ref: '#/components/schemas/link'
        assets:
          $ref: '#/components/schemas/assets'
      example:
        assets:
          analytic:
            title: 1-Band Analytic
            href: >-
              http://cool-sat.com/catalog/collections/cs/items/CS3-201605XX_132130_04/analytic-1.tif
    partialItemProperties:
      type: object
      description: allows for partial collections of metadata fields
      additionalProperties: true
      properties:
        datetime:
          $ref: '#/components/schemas/datetime'
    stac_version:
      title: STAC version
      type: string
      example: 1.0.0
    stac_extensions:
      title: STAC extensions
      type: array
      uniqueItems: true
      items:
        anyOf:
          - title: Reference to a JSON Schema
            type: string
            format: uri
          - title: Reference to a core extension
            type: string
    itemId:
      type: string
      description: 'Provider identifier, a unique ID.'
    bbox:
      description: |-
        Only features that have a geometry that intersects the bounding box are
        selected. The bounding box is provided as four or six numbers,
        depending on whether the coordinate reference system includes a
        vertical axis (elevation or depth):

        * Lower left corner, coordinate axis 1
        * Lower left corner, coordinate axis 2  
        * Lower left corner, coordinate axis 3 (optional) 
        * Upper right corner, coordinate axis 1 
        * Upper right corner, coordinate axis 2 
        * Upper right corner, coordinate axis 3 (optional)

        The coordinate reference system of the values is WGS84
        longitude/latitude (http://www.opengis.net/def/crs/OGC/1.3/CRS84) unless
        a different coordinate reference system is specified in the parameter
        `bbox-crs`.

        For WGS84 longitude/latitude the values are in most cases the sequence
        of minimum longitude, minimum latitude, maximum longitude and maximum
        latitude. However, in cases where the box spans the antimeridian the
        first value (west-most box edge) is larger than the third value
        (east-most box edge).

        If a feature has multiple spatial geometry properties, it is the
        decision of the server whether only a single spatial geometry property
        is used to determine the extent or all relevant geometries.

        Example: The bounding box of the New Zealand Exclusive Economic Zone in
        WGS 84 (from 160.6째E to 170째W and from 55.95째S to 25.89째S) would be
        represented in JSON as `[160.6, -55.95, -170, -25.89]` and in a query as
        `bbox=160.6,-55.95,-170,-25.89`.
      type: array
      minItems: 4
      maxItems: 6
      items:
        type: number
      example:
        - -110
        - 39.5
        - -105
        - 40.5
    pointGeoJSON:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - Point
        coordinates:
          type: array
          minItems: 2
          items:
            type: number
    multipointGeoJSON:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - MultiPoint
        coordinates:
          type: array
          items:
            type: array
            minItems: 2
            items:
              type: number
    linestringGeoJSON:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - LineString
        coordinates:
          type: array
          minItems: 2
          items:
            type: array
            minItems: 2
            items:
              type: number
    multilinestringGeoJSON:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - MultiLineString
        coordinates:
          type: array
          items:
            type: array
            minItems: 2
            items:
              type: array
              minItems: 2
              items:
                type: number
    polygonGeoJSON:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - Polygon
        coordinates:
          type: array
          items:
            type: array
            minItems: 4
            items:
              type: array
              minItems: 2
              items:
                type: number
    multipolygonGeoJSON:
      type: object
      required:
        - type
        - coordinates
      properties:
        type:
          type: string
          enum:
            - MultiPolygon
        coordinates:
          type: array
          items:
            type: array
            items:
              type: array
              minItems: 4
              items:
                type: array
                minItems: 2
                items:
                  type: number
    geometryGeoJSON:
      oneOf:
        - $ref: '#/components/schemas/pointGeoJSON'
        - $ref: '#/components/schemas/multipointGeoJSON'
        - $ref: '#/components/schemas/linestringGeoJSON'
        - $ref: '#/components/schemas/multilinestringGeoJSON'
        - $ref: '#/components/schemas/polygonGeoJSON'
        - $ref: '#/components/schemas/multipolygonGeoJSON'
        - $ref: '#/components/schemas/geometrycollectionGeoJSON'
    geometrycollectionGeoJSON:
      type: object
      required:
        - type
        - geometries
      properties:
        type:
          type: string
          enum:
            - GeometryCollection
        geometries:
          type: array
          items:
            $ref: '#/components/schemas/geometryGeoJSON'
    itemType:
      type: string
      description: The GeoJSON type
      enum:
        - Feature
    link:
      title: Link
      type: object
      required:
        - href
        - rel
      properties:
        href:
          type: string
          format: uri
          description: The location of the resource
        rel:
          type: string
          description: Relation type of the link
        type:
          type: string
          description: The media type of the resource
        title:
          type: string
          description: Title of the resource
        method:
          type: string
          enum:
            - GET
            - POST
          default: GET
          description: Specifies the HTTP method that the resource expects
        headers:
          type: object
          description: Object key values pairs they map to headers
          example:
            Accept: application/json
        body:
          type: object
          description: >-
            For POST requests, the resource can specify the HTTP body as a JSON
            object.
        merge:
          type: boolean
          default: false
          description: |-
            This is only valid when the server is responding to POST request.

            If merge is true, the client is expected to merge the body value
            into the current request body before following the link.
            This avoids passing large post bodies back and forth when following
            links, particularly for navigating pages through the `POST /search`
            endpoint.

            NOTE: To support form encoding it is expected that a client be able
            to merge in the key value pairs specified as JSON
            `{"next": "token"}` will become `&next=token`.
    links:
      type: array
      items:
        $ref: '#/components/schemas/link'
    assets:
      type: object
      additionalProperties:
        type: object
        required:
          - href
        properties:
          href:
            type: string
            format: url
            description: Link to the asset object
            example: >-
              http://cool-sat.com/catalog/collections/cs/items/CS3-20160503_132130_04/thumb.png
          title:
            type: string
            description: Displayed title
            example: Thumbnail
          description:
            type: string
            description: >-
              Multi-line description to explain the asset.


              [CommonMark 0.29](http://commonmark.org/) syntax MAY be used for
              rich text representation.
            example: Small 256x256px PNG thumbnail for a preview.
          type:
            type: string
            description: Media type of the asset
            example: image/png
          roles:
            type: array
            items:
              type: string
            description: Purposes of the asset
            example:
              - thumbnail
    item:
      description: >-
        A GeoJSON Feature augmented with foreign members that contain values
        relevant to a STAC entity
      type: object
      required:
        - stac_version
        - id
        - type
        - geometry
        - bbox
        - links
        - properties
        - assets
      properties:
        stac_version:
          $ref: '#/components/schemas/stac_version'
        stac_extensions:
          $ref: '#/components/schemas/stac_extensions'
        id:
          $ref: '#/components/schemas/itemId'
        bbox:
          $ref: '#/components/schemas/bbox'
        geometry:
          $ref: '#/components/schemas/geometryGeoJSON'
        type:
          $ref: '#/components/schemas/itemType'
        links:
          $ref: '#/components/schemas/links'
        assets:
          $ref: '#/components/schemas/assets'
      example:
        stac_version: 1.0.0
        stac_extensions:
          - eo
          - view
          - 'https://example.com/cs-extension/1.0/schema.json'
        type: Feature
        id: CS3-20160503_132131_05
        bbox:
          - -122.59750209
          - 37.48803556
          - -122.2880486
          - 37.613537207
        geometry:
          type: Polygon
          coordinates:
            - - - -122.308150179
                - 37.488035566
              - - -122.597502109
                - 37.538869539
              - - -122.576687533
                - 37.613537207
              - - -122.2880486
                - 37.562818007
              - - -122.308150179
                - 37.488035566
        properties:
          datetime: '2016-05-03T13:22:30.040Z'
          title: A CS3 item
          license: PDDL-1.0
          providers:
            - name: CoolSat
              roles:
                - producer
                - licensor
              url: 'https://cool-sat.com/'
          'view:sun_azimuth': 168.7
          'eo:cloud_cover': 0.12
          'view:off_nadir': 1.4
          platform: coolsat2
          instruments:
            - cool_sensor_v1
          'eo:bands': []
          'view:sun_elevation': 33.4
          'eo:gsd': 0.512
        collection: CS3
        links:
          - rel: self
            href: 'http://cool-sat.com/collections/CS3/items/20160503_132130_04'
          - rel: root
            href: 'http://cool-sat.com/collections'
          - rel: parent
            href: 'http://cool-sat.com/collections/CS3'
          - rel: collection
            href: 'http://cool-sat.com/collections/CS3'
        assets:
          analytic:
            href: >-
              http://cool-sat.com/static-catalog/CS3/20160503_132130_04/analytic.tif
            title: 4-Band Analytic
          thumbnail:
            href: >-
              http://cool-sat.com/static-catalog/CS3/20160503_132130_04/thumbnail.png
            title: Thumbnail
    itemCollection:
      description: >-
        A GeoJSON FeatureCollection augmented with foreign members that contain
        values relevant to a STAC entity
      type: object
      required:
        - stac_version
        - features
        - type
      properties:
        stac_version:
          $ref: '#/components/schemas/stac_version'
        stac_extensions:
          $ref: '#/components/schemas/stac_extensions'
        type:
          type: string
          enum:
            - FeatureCollection
        features:
          type: array
          items:
            $ref: '#/components/schemas/item'
        links:
          type: array
          description: >-
            An array of links. Can be used for pagination, e.g. by providing a
            link with the `next` relation type.
          items:
            $ref: '#/components/schemas/link'
          example:
            - rel: next
              href: >-
                http://api.cool-sat.com/search?next=ANsXtp9mrqN0yrKWhf-y2PUpHRLQb1GT-mtxNcXou8TwkXhi1Jbk
    exception:
      type: object
      description: >-
        Information about the exception: an error code plus an optional
        description.
      required:
        - code
      properties:
        code:
          type: string
        description:
          type: string
    datetime:
      type: string
      format: date-time
      nullable: true
      description: >-
        The searchable date and time of the assets, in UTC.

        It is formatted according to [RFC 3339, section
        5.6](https://tools.ietf.org/html/rfc3339#section-5.6).

        `null` is allowed, but requires `start_datetime` and `end_datetime` from
        common metadata to be set.
      example: '2018-02-12T00:00:00Z'
  responses:
    BadRequest:
      description: The request was malformed or semantically invalid
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
    PreconditionFailed:
      description: Some condition specified by the request could not be met in the server
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
    NotFound:
      description: The requested URI was not found.
    ServerError:
      description: A server error occurred.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/exception'
